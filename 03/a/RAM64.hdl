// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address[0..2], a=if0, b=if1, c=if2, d=if3, e=if4, f=if5, g=if6, h=if7);

    And(a=if0, b=load, out=load0);
    And(a=if1, b=load, out=load1);
    And(a=if2, b=load, out=load2);
    And(a=if3, b=load, out=load3);
    And(a=if4, b=load, out=load4);
    And(a=if5, b=load, out=load5);
    And(a=if6, b=load, out=load6);
    And(a=if7, b=load, out=load7);

    RAM8(in=in, load=load0, address=address[3..5], out=out0);
    RAM8(in=in, load=load1, address=address[3..5], out=out1);
    RAM8(in=in, load=load2, address=address[3..5], out=out2);
    RAM8(in=in, load=load3, address=address[3..5], out=out3);
    RAM8(in=in, load=load4, address=address[3..5], out=out4);
    RAM8(in=in, load=load5, address=address[3..5], out=out5);
    RAM8(in=in, load=load6, address=address[3..5], out=out6);
    RAM8(in=in, load=load7, address=address[3..5], out=out7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[0..2], out=out);
}